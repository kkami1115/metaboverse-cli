renv::activate()
install.packages("renv")
renv::activate()
renv::install("basilisk")
BiocManager::install("basilisk")
#' @importFrom basilisk BasiliskEnvironment
env1 <- BasiliskEnvironment("env1", pkgname="son.of.basilisk",
packages=c("pandas==1.4.3", "python-dateutil==2.8.2", "pytz==2022.2.1"))
library(basilisk)
#' @importFrom basilisk BasiliskEnvironment
env1 <- BasiliskEnvironment("env1", pkgname="son.of.basilisk",
packages=c("pandas==1.4.3", "python-dateutil==2.8.2", "pytz==2022.2.1"))
#' @importFrom basilisk BasiliskEnvironment
env2 <- BasiliskEnvironment("env2", pkgname="son.of.basilisk",
packages=c("scikit-learn==1.1.1", "python-dateutil==2.8.1", "pytz==2022.1"))
#' @importFrom basilisk BasiliskEnvironment
env3 <- BasiliskEnvironment("env3", pkgname="son.of.basilisk",
packages=character(0), path="test_dummy")
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="MetaboverseR",
packages=c("pandas",
"numpy==1.16.5",
"scipy",
"scikit-learn",
"networkx",
"requests",
"certifi")
)
my_env
reticulate::import("scvelo")
n
install.packages("BiocManager")
basilisk:::obtainEnvironmentPath()
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
packageVersion("Matrix")
packageVersion("AaronPackage")
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas",
"numpy==1.16.5",
"scipy",
"scikit-learn",
"networkx",
"requests",
"certifi"),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3",
"numpy==1.16.5",
"scipy==1.10.0",
"scikit-learn==1.2.0",
"networkx==3.0",
"requests==2.28.2",
"certifi==2022.12.7"),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3",
"numpy==1.16.5",
"scipy==1.10.0",
"scikit-learn==1.2.0",
"networkx==2.0",
"requests==2.28.2",
"certifi==2022.12.7"),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3",
"numpy==1.24.0",
"scipy==1.10.0",
"scikit-learn==1.2.0",
"networkx==2.0",
"requests==2.28.2",
"certifi==2022.12.7"),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==latest",
"numpy==1.24.0",
"scipy==1.10.0",
"scikit-learn==1.2.0",
"networkx==2.0",
"requests==2.28.2",
"certifi==2022.12.7"),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
example(BasiliskEnvironment-class, package = "basilisk")
1.5.3
reticulate::conda_update()
reticulate::miniconda_update()
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3",
#         "numpy==1.24.0",
#         "scipy==1.10.0",
#         "scikit-learn==1.2.0",
#         "networkx==2.0",
#         "requests==2.28.2",
#         "certifi==2022.12.7"
),
channels = c("bioconda", "conda-forge")
)
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3"  #,
#         "numpy==1.24.0",
#         "scipy==1.10.0",
#         "scikit-learn==1.2.0",
#         "networkx==2.0",
#         "requests==2.28.2",
#         "certifi==2022.12.7"
),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
basilisk::configureBasiliskEnv()
# Provision an environment.
my_env <- BasiliskEnvironment(envname="tmp1",
pkgname="Matrix",
packages=c("pandas==1.5.3"  #,
#         "numpy==1.24.0",
#         "scipy==1.10.0",
#         "scikit-learn==1.2.0",
#         "networkx==2.0",
#         "requests==2.28.2",
#         "certifi==2022.12.7"
),
channels = c("bioconda", "conda-forge")
)
reticulate::use_virtualenv(basilisk:::obtainEnvironmentPath(my_env))
basilisk:::obtainEnvironmentPath(my_env)
my_env
install.packages("pacman")
#install.packages("pacman")
pacman::p_load(reticulate)
pd <- reticulate::import("pandas")
reticulate::conda_install()
use_python()
pacman::p_load(reticulate)
pd <- reticulate::import("pandas")
pd <- reticulate::import("pandas")
numpy < - reticulate::import("numpy")
#install.packages("pacman")
pacman::p_load(reticulate)
pd <- reticulate::import("pandas")
pd
numpy < - reticulate::import("numpy")
numpy < - reticulate::import("numpy-base")
#install.packages("pacman")
pacman::p_load(reticulate)
pd <- reticulate::import("pandas")
numpy < - reticulate::import("numpy")
reticulate::py_install("numpy")
#install.packages("pacman")
pacman::p_load(reticulate)
pd <- reticulate::import("pandas")
numpy < - reticulate::import("numpy")
reticulate::source_python("../curate/fetch_species.py")
urlopen()
fetch_species()
reticulate::source_python("../curate/load_complexes_db.py")
reticulate::source_python("../curate/load_complexes_db.py")
reticulate::source_python("../curate/load_reactions_db.py")
reticulate::source_python("../curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/fetch_species.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/tmp1.py")
reticulate::source_python("../metaboverse_cli/curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/utils.py")
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
# curate folder
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
# curate folder
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
# curate folder
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
# curate folder
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
#reticulate::source_python("../metaboverse_cli/curate/__test__.py")
reticulate::source_python("../metaboverse_cli/curate/fetch_species.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/utils.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
reticulate::source_python("../metaboverse_cli/curate/__test__.py")
# target folder
reticulate::source_python("../metaboverse_cli/target/__init__.py")
reticulate::source_python("../metaboverse_cli/target/__main__.py")
reticulate::source_python("../metaboverse_cli/target/__init__.py")
reticulate::source_python("../metaboverse_cli/target/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
pac,a
pacman::p_load(reticulate)
#install.packages("pacman")
pacman::p_load(reticulate)
reticulate::import("pandas")
reticulate::import("numpy")
reticulate::import("scipy")
reticulate::import("scikit-learn")
reticulate::import("scikit-learn-base")
reticulate::py_install("scikit-learn")
#install.packages("pacman")
pacman::p_load(reticulate)
reticulate::import("pandas")
reticulate::import("numpy")
reticulate::import("scipy")
reticulate::import("scikit-learn")
reticulate::import("networkx")
reticulate::import("requests")
reticulate::import("certifi")
reticulate::import("scikit-learn")
reticulate::import("scikit-learn")
reticulate::py_install("scikit-learn")
reticulate::import("scikit-learn")
reticulate::py_install("pandas")
reticulate::py_install("scikit-learn")
reticulate::import("scikit-learn")
reticulate::import("sklearn")
pacman::p_load(reticulate)
reticulate::import("pandas")
reticulate::import("numpy")
reticulate::import("scipy")
reticulate::import("sklearn")
reticulate::import("networkx")
reticulate::import("requests")
reticulate::import("certifi")
reticulate::source_python("../metaboverse_cli/curate/__init__.py")
reticulate::source_python("../metaboverse_cli/curate/__main__.py")
#reticulate::source_python("../metaboverse_cli/curate/__test__.py")
reticulate::source_python("../metaboverse_cli/curate/fetch_species.py")
reticulate::source_python("../metaboverse_cli/curate/load_complexes_db.py")
reticulate::source_python("../metaboverse_cli/curate/load_reactions_db.py")
reticulate::source_python("../metaboverse_cli/curate/utils.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__test__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__test__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__test__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__test__.py")
# analyze folder
reticulate::source_python("../metaboverse_cli/analyze/__init__.py")
reticulate::source_python("../metaboverse_cli/analyze/__main__.py")
reticulate::source_python("../metaboverse_cli/analyze/__test__.py")
reticulate::source_python("../metaboverse_cli/analyze/collapse.py")
reticulate::source_python("../metaboverse_cli/analyze/model.py")
reticulate::source_python("../metaboverse_cli/analyze/mpl_colormaps.py")
reticulate::source_python("../metaboverse_cli/analyze/prepare_data.py")
reticulate::source_python("../metaboverse_cli/analyze/utils.py")
reticulate::source_python("../metaboverse_cli/target/__init__.py")
reticulate::source_python("../metaboverse_cli/target/__main__.py")
#reticulate::source_python("../metaboverse_cli/target/__test__.py")
reticulate::source_python("../metaboverse_cli/target/build.py")
reticulate::source_python("../metaboverse_cli/target/utils.py")
reticulate::source_python("../metaboverse_cli/target/__test__.py")
